AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  url_saver

Parameters:
  DomainName:
    Type: String
  HostedZoneName:
    Type: String
  CertificateArn:
    Type: String
    Description: ARN of ACM certificate

Globals:
  Function:
    Timeout: 10
    MemorySize: 256
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
  
Resources:
  UrlTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: url-saver
      AttributeDefinitions:
        - AttributeName: hash
          AttributeType: S
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: hash
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  CreateUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-url
      CodeUri: functions/
      Handler: create.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref UrlTable
          DOMAIN: !Ref DomainName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UrlTable
      Events:
        CreateUrl:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /url
            Method: POST

  RedirectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: redirect-url
      CodeUri: functions/
      Handler: redirect.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref UrlTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UrlTable
      Events:
        RedirectUrl:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{hash}
            Method: GET
  
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: 
        Type: REGIONAL

  ApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref DomainName
      RegionalCertificateArn: !Ref CertificateArn
      EndpointConfiguration:
        Types: 
          - REGIONAL
      SecurityPolicy: TLS_1_2
  
  ApiGatewayMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn:
      - ApiGatewayApi
      - ApiGatewayDomainName
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref ApiGatewayApi
      Stage: Prod
  DnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZoneName
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt ApiGatewayDomainName.RegionalDomainName
        HostedZoneId: !GetAtt ApiGatewayDomainName.RegionalHostedZoneId
  
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  CustomDomainUrl:
    Description: Custom Domain URL
    Value: !Sub "https://${DomainName}"